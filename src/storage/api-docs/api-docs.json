{
    "openapi": "3.0.0",
    "info": {
        "title": "Search API Documentation",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/registration": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Register new user",
                "description": "If user input new valid credentials, will create new user.\n     *                   And log in with his credentials, and get token in response. ",
                "operationId": "register_user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email address of the new user.",
                                        "type": "string",
                                        "example": "admin@gmail.com"
                                    },
                                    "name": {
                                        "description": "Name of the new user.",
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "password": {
                                        "description": "Password of the new user.",
                                        "type": "integer",
                                        "example": 123456
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9yZWdpc3RyYXRpb24iLCJpYXQiOjE1ODc2MzUyNzEsImV4cCI6MTU4NzYzODg3MSwibmJmIjoxNTg3NjM1MjcxLCJqdGkiOiJwZ1JuNnk1aXhqZENkblJiIiwic3ViIjoxOCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.gMKj35EISH3cF6rSa8xPN4nz2FTeuUE3iBqXwr8VgIw"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "The email has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "put": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Check user credential and return token",
                "description": "If user credentials are valid, return token to user",
                "operationId": "login_user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email address of the new user.",
                                        "type": "string",
                                        "example": "admin@gmail.com"
                                    },
                                    "password": {
                                        "description": "Password of the new user.",
                                        "type": "integer",
                                        "example": 123456
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9yZWdpc3RyYXRpb24iLCJpYXQiOjE1ODc2MzUyNzEsImV4cCI6MTU4NzYzODg3MSwibmJmIjoxNTg3NjM1MjcxLCJqdGkiOiJwZ1JuNnk1aXhqZENkblJiIiwic3ViIjoxOCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.gMKj35EISH3cF6rSa8xPN4nz2FTeuUE3iBqXwr8VgIw"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid email or password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scanDirectory": {
            "put": {
                "tags": [
                    "Scan directory"
                ],
                "summary": "Scanning directory with depth and save data to DB.",
                "description": "",
                "operationId": "scan_directory",
                "parameters": [
                    {
                        "name": "dir",
                        "in": "query",
                        "description": "Path to directory for scanning. Example: /var/www/html/public",
                        "required": true,
                        "example": "/var/www/html/public"
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "description": "Depth for scanning.",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Directory: source_dir scanned successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid email or password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/getScanLogs": {
            "get": {
                "tags": [
                    "Scan directory"
                ],
                "summary": "Get log data about directory scanning from a log file.",
                "description": "If user send correct JWT token, will get scanning logs in json format.",
                "operationId": "get_scan_logs",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Scanned logs data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid email or password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Scan log file does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/searchFiles": {
            "get": {
                "tags": [
                    "Search files"
                ],
                "summary": "Search files by criteria: file_name, depth, type.",
                "description": "",
                "operationId": "search_files",
                "parameters": [
                    {
                        "name": "file_name",
                        "in": "query",
                        "description": "File name for search.",
                        "required": false
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "description": "Depth of file(0,1,2,3)",
                        "required": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "File type(txt,jpg,php)",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid email or password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}